
import os
import openai
import asyncio
import logging
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, InputMediaPhoto
from telegram.ext import (
    Application,
    CallbackQueryHandler,
    MessageHandler,
    CommandHandler,
    ContextTypes,
    filters,
)
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
TELEGRAM_BOT_TOKEN_APPROVAL = os.getenv("TELEGRAM_BOT_TOKEN_APPROVAL")
TELEGRAM_APPROVAL_CHAT_ID = os.getenv("TELEGRAM_APPROVAL_CHAT_ID")
TELEGRAM_APPROVAL_USER_ID = int(os.getenv("TELEGRAM_APPROVAL_USER_ID", "0"))
TELEGRAM_CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
PINATA_JWT = os.getenv("PINATA_JWT")

openai.api_key = OPENAI_API_KEY

# === –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è ===
approval_messages = {}

# === –ö–Ω–æ–ø–∫–∏ –ø–æ–¥ –ø–æ—Å—Ç–∞–º–∏ ===
def build_keyboard():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚úÖ –ü–æ—Å—Ç", callback_data="approve")],
        [InlineKeyboardButton("‚è≥ –ü—Ä–æ–¥–ª–∏—Ç—å", callback_data="delay")],
        [InlineKeyboardButton("‚ôªÔ∏è –ï—â—ë —Ä–∞–∑", callback_data="regenerate")],
        [InlineKeyboardButton("üñºÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞", callback_data="image")],
        [InlineKeyboardButton("üí¨ –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å", callback_data="chat")],
        [InlineKeyboardButton("üß† –°–≤–æ—è —Ç–µ–º–∞", callback_data="custom")]
    ])

# === –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ===
async def generate_post():
    return {
        "text_ru": "–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –ø–æ—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è.",
        "text_en": "This is a sample post in English for publishing.",
        "image_url": "https://via.placeholder.com/800x400.png?text=AI+Coin"
    }

# === –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ ===
async def send_post_for_approval(context: ContextTypes.DEFAULT_TYPE):
    post = await generate_post()

    msg = await context.bot.send_photo(
        chat_id=TELEGRAM_APPROVAL_CHAT_ID,
        photo=post["image_url"],
        caption=post["text_ru"],
        reply_markup=build_keyboard(),
    )

    approval_messages[msg.message_id] = post

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ ===
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    if user_id != TELEGRAM_APPROVAL_USER_ID:
        await query.edit_message_caption(
            caption="‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–∏–º –±–æ—Ç–æ–º."
        )
        return

    post = approval_messages.get(query.message.message_id)
    if not post:
        await query.edit_message_caption(caption="‚ö†Ô∏è –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    if query.data == "approve":
        await context.bot.send_photo(
            chat_id=TELEGRAM_CHANNEL_ID,
            photo=post["image_url"],
            caption=post["text_en"]
        )
        await query.edit_message_caption(caption="‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.")

    elif query.data == "delay":
        await query.edit_message_caption(caption="‚è≥ –û—Ç–ª–æ–∂–µ–Ω–æ.")

    elif query.data == "regenerate":
        await query.edit_message_caption(caption="üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞...")
        await send_post_for_approval(context)

    elif query.data == "image":
        await query.edit_message_caption(caption="üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥—Ä—É–≥–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏...")
        await send_post_for_approval(context)

    elif query.data == "chat":
        await query.edit_message_caption(caption="üí¨ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏–∞–ª–æ–≥...")
        await context.bot.send_message(chat_id=user_id, text="–ì–æ—Ç–æ–≤ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å. –û —á—ë–º –ø–æ—Å—Ç?")

    elif query.data == "custom":
        await query.edit_message_caption(caption="üß† –°–≤–æ—è —Ç–µ–º–∞. –ñ–¥—É –∏–¥–µ—é.")
        await context.bot.send_message(chat_id=user_id, text="–ù–∞–ø–∏—à–∏ —Ç–µ–º—É –≤—Ä—É—á–Ω—É—é.")

# === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
def main():
    app = Application.builder().token(TELEGRAM_BOT_TOKEN_APPROVAL).build()

    app.add_handler(CallbackQueryHandler(handle_callback))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, lambda u, c: None))
    app.add_handler(CommandHandler("start", lambda u, c: None))

    # ‚è± –¢–µ—Å—Ç: –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    async def delayed_start():
        await asyncio.sleep(2)
        await send_post_for_approval(app.bot)

    app.create_task(delayed_start())
    app.run_polling()

if __name__ == "__main__":
    main()
