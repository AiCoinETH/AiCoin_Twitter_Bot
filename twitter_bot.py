
import os
import logging
import asyncio
import openai
import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CallbackQueryHandler,
    ContextTypes,
    MessageHandler,
    filters,
)
from telegram.constants import ParseMode

# === –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
TELEGRAM_BOT_TOKEN_APPROVAL = os.getenv("TELEGRAM_BOT_TOKEN_APPROVAL")
TELEGRAM_APPROVAL_CHAT_ID = os.getenv("TELEGRAM_APPROVAL_CHAT_ID")
TELEGRAM_APPROVAL_USER_ID = int(os.getenv("TELEGRAM_APPROVAL_USER_ID", "0"))

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# === –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ ===
async def generate_post():
    return "–ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞", "https://placekitten.com/800/400"

# === –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞ –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ ===
async def send_post_for_approval(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text, image_url = await generate_post()
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data="approve"),
            InlineKeyboardButton("üîÅ –ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å", callback_data="regenerate"),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_photo(
        chat_id=TELEGRAM_APPROVAL_CHAT_ID,
        photo=image_url,
        caption=f"*–ù–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å (—Ä—É—Å—Å–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç)*\n\n{text}",
        parse_mode=ParseMode.MARKDOWN,
        reply_markup=reply_markup,
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ ===
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "approve":
        await query.edit_message_caption(caption="‚úÖ –ü–æ—Å—Ç –æ–¥–æ–±—Ä–µ–Ω.")
    elif query.data == "regenerate":
        await send_post_for_approval(update, context)

# === –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ ===
async def post_init_hook(app):
    await app.bot.send_message(chat_id=TELEGRAM_APPROVAL_CHAT_ID, text="ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    await send_post_for_approval(None, app)

# === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
def main():
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN_APPROVAL).post_init(post_init_hook).build()

    app.add_handler(CallbackQueryHandler(button_handler))
    app.run_polling()

if __name__ == "__main__":
    main()
