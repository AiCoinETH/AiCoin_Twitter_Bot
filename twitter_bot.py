import os
import openai
import asyncio
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, Bot
from telegram.ext import (
    Application,
    CallbackQueryHandler,
    ContextTypes,
)
from datetime import datetime

TELEGRAM_BOT_TOKEN_APPROVAL = os.getenv("TELEGRAM_BOT_TOKEN_APPROVAL")
TELEGRAM_APPROVAL_CHAT_ID = os.getenv("TELEGRAM_APPROVAL_CHAT_ID")
TELEGRAM_APPROVAL_USER_ID = int(os.getenv("TELEGRAM_APPROVAL_USER_ID", "0"))

approval_bot = Bot(token=TELEGRAM_BOT_TOKEN_APPROVAL)
post_data = {"text": "–ü–æ—Å—Ç –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è: [–∑–∞–≥–ª—É—à–∫–∞]", "image": "URL"}

pending_post = {"active": True, "timer": None}

keyboard = InlineKeyboardMarkup([
    [InlineKeyboardButton("‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="approve")],
    [InlineKeyboardButton("‚ôªÔ∏è –ó–∞–Ω–æ–≤–æ", callback_data="regenerate")],
    [InlineKeyboardButton("üñºÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫—É", callback_data="new_image")],
    [InlineKeyboardButton("üí¨ –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å", callback_data="chat")],
    [InlineKeyboardButton("üõë –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")],
    [InlineKeyboardButton("üïí –ü–æ–¥—É–º–∞—Ç—å", callback_data="think")]
])

async def send_post_for_approval(update: Update = None, context: ContextTypes.DEFAULT_TYPE = None):
    try:
        await approval_bot.send_message(
            chat_id=TELEGRAM_APPROVAL_CHAT_ID,
            text=post_data["text"],
            reply_markup=keyboard
        )
    except Exception as e:
        await approval_bot.send_message(chat_id=TELEGRAM_APPROVAL_CHAT_ID, text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å—Ç–∞: {e}")

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    action = query.data

    if action == "approve":
        await approval_bot.send_message(chat_id=TELEGRAM_APPROVAL_CHAT_ID, text="‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.")
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    elif action == "regenerate":
        await approval_bot.send_message(chat_id=TELEGRAM_APPROVAL_CHAT_ID, text="‚ôªÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π –ø–æ—Å—Ç...")
        await send_post_for_approval()
    elif action == "new_image":
        await approval_bot.send_message(chat_id=TELEGRAM_APPROVAL_CHAT_ID, text="üñºÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É...")
    elif action == "chat":
        await approval_bot.send_message(chat_id=TELEGRAM_APPROVAL_CHAT_ID, text="üí¨ –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –¥–∏–∞–ª–æ–≥–∞. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")
    elif action == "cancel":
        await approval_bot.send_message(chat_id=TELEGRAM_APPROVAL_CHAT_ID, text="üõë –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    elif action == "think":
        pending_post["timer"] = datetime.now()
        pending_post["active"] = True
        await approval_bot.send_message(chat_id=TELEGRAM_APPROVAL_CHAT_ID, text="üïí –ü–æ–¥—É–º–∞–π—Ç–µ. –Ø –∂–¥—É —Ä–µ—à–µ–Ω–∏—è.")
    else:
        await approval_bot.send_message(chat_id=TELEGRAM_APPROVAL_CHAT_ID, text=f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {action}")

async def delayed_start(app: Application):
    await asyncio.sleep(2)
    await send_post_for_approval()

def main():
    app = Application.builder().token(TELEGRAM_BOT_TOKEN_APPROVAL).post_init(delayed_start).build()
    app.add_handler(CallbackQueryHandler(button_handler))
    app.run_polling()

if __name__ == "__main__":
    main()
